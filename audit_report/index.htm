
<!doctype html>
<html lang="en">
<!-- Hi Folks, this is the template file for pages in the citySchema.org documentation library -->
<head> <!-- Edit the following for each page -->
    <title>Culture of Preparedness and Accountability</title>
    <meta name="description" content="Keeping assets safe.">
    <meta name="keywords" content="">
    <meta name="author" content="Paul B. Cote">
    
<!-- don't edit between here and the Article div.  -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <link rel="icon" href="../resources/images/favicon.ico" type="image/x-icon">
    <script src="../resources/jquery/jquery-3.6.0.min.js"></script>
    <link href="../resources/docutree.css" rel="stylesheet"> 
    <script src="../resources/slideshow_pbc.js"></script>
    <link href="../resources/slideshow_pbc.css" rel="stylesheet"> 
    

    <!-- The index sidebar and all content other than the main article come from the cdash_includes.js.
          When you add a new page or internalachcor, you should update the index in cdash_includes.js.-->
    <script src="../resources/cdash_includes.js"></script>
    <!-- THis has to come after the cityschema_includes file-->
    <script src="../resources/docutree.js"></script>
    </head>
    <body>
      <div id="grid-container">
        <div id="index-container">
          <div id="index-header"> <!-- Content provided by cdash_includes.js--> </div>
          <div id="index">        <!-- Content provided by cdash_includes.js--> </div>
          <div id="index-footer"> <!-- Content provided by cdash_includes.js--> </div>
        </div> 
<div id="main-container">
  <div id="header"> <!-- Content provided by cdash_includes.js--> </div>

<!-- Page content goes inside the article div -->
  <div id="article">
  <h3 class="section_title"></h3>  <!-- Optional: would be the tile of the intro chapter.  -->
  <h1 class="title">Culture of Preparedness and Accountability</h1>
  
  <p>
    CDASH is a treasure chest that accumulates knowledge collected and organized over a long period of time.  Once items are initially loaded into the Production CDASH Instance, information about places and documents may be corrected or enriched, and before too long, CDASH becomes the only repository for the most authoritative representation of the Architectural Survey.  
  </p><p>
    The CHC Omeka Owner and the Administrator understand that the information in the CHC Omeka installation would be nearly impossible to regenerate should some sort of disaster strike or more importantly, if some simple mistake results in information disappearing or becoming corrupt. 
    <p>The prospect of noticing that some number of CDASH items has disappeared or been damaged, without knowing the extent of the damage or when and why the information was lost should make us very anxious. 
    <B>The Good News</b> is that our web host, Microsoft Azure, contains facilities for recovering the necessary components to rebuild the Production CDASH instance and its contents. Nevertheless, the recoverability of CDASH is not without limits and requirements for specialized knowledge, which are discussed in detail, below.  
    <p>THe key to a happy life is to have a regular routine of verifying that everything is OK and or for catching any problems without delay.

  <h3>Topics</h3>
  <ul class="verses">

    <li><a href="../audit_report/index.htm#audits">The Importance of Regular Audits</a>
    <li><a href="../audit_report/index.htm#problems">What Could Go Wrong</a>
    <li><a href="../audit_report/index.htm#culture">Establish a Culture of Routine Data Safety</a>
    <li><a href="../audit_report/index.htm#level1">Preparedness Level 1:  Verify Backup and Restore Capabilities</a>
    <li><a href="../audit_report/index.htm#level2">Preparedness Level 2: Check Basic Functionality</a>
    <li><a href="../audit_report/index.htm#level3">Preparedness Level 3: Count your Chickens </a>
    <li><a href="../audit_report/index.htm#giveashit">The Critical Importance of Giving a Shit</a>
    <li><a href="../audit_report/index.htm#to-to">To-Do: Automated Audit Dashboard</a>
    </ul>



<h3 id="audits">The Importance of Regular Audits</h3>
<p> Most computer users have experienced the sinking feeling that accompanies the discovery of mysterious lost or corrupted data.  Even if you have a great backup system, one of the trickiest problems is figuring out the extent of the problem and when the problem occurred.  Since the backup and restore accommodations allow an instance andd its contents to be restored to a specific date in the past, it is best to be able to restore to the day before the problem occurred. Finding out about the issue sooner is much better, since any additions or changes that were made after the restore date will be lost and have to be repeated.  There is also the possibility that more than one overlay of problems has occurred, which can lead to very confusing situations. 

<p>
The less time that has elapsed between the problem and the discovery of it, the greater will be the hope that a complete restoration can be made without problems. 

<h3 id="problems">What could Go Wrong?</h3>
<p>Here is a list of the sorts of things that can go wrong. 
<ul>
  <li>Place or Document Items disappear.
  <li>Media (scannned pages) associated with Document Items may disappear.
  <li>Item properties can become messed up due to errors with bulk editing.
  <li>Relationships between Places, Documents or Folders could become discombobulated, leading to orphan documents and places or folders that seem to have no related information.
  <li>Other</b>
</ul>
<h3>Beware the Unexpected!</h3>
<p>The worst sort of trouble is the sort that is unexpected and undetected.  As an example, did you know that if you remove a property from the resource template for a a type if item (Place or Document) that all of the values for that property will disappear without any warning or easy recovery method? This is the sort of a trap that may not be detected for a very long time after it has sprung.  

<h2 id="culture">Establish a Culture of Routine Data Safety</h2>
<p>When it comes to protecting assets, a sense of anxiety is healthy -- especially if it motivates the administrator and the owner to establish regular routines of validating the integrity of the collection.  We recommend that the following checks be carried out every week by the Omeka Administrator and reported to the CHC Omeka Owner.

<h2 id="level1">Preparedness Level 1:  Verify Backup and Restore Capabilities</h2>
<p>The cloud host for the CHC Omeka installation (Microsoft Azure) has facilities for taking daily backups of the Omeka installation.  Part of your safety culture should be to check each week that these backups are being saved and accessible.  This procedure is covered in the page <a href="../azure_overview/index.htm">CHC Omeka in Azure Overview, Integrity Check, and Restoration</a>. Check the backups for the MySQL database the CHCPersist and CHCCans file shares.  These are saved for 30 days. 
  
<h2 id="level2">Preparedness Level 2: Check Basic Functionality</h2>
<p>A simple way of assuring theat your Omeka assets are safe is to simply use the application and pay attention to the following:

  <ul>
    <li>Does the map of place items look right?
    <li>Use the <b>View</b> button to look at the full set of properties for Place and Document Items.  
    <li>Verify that jumping from document to document, from a list of folder contents causes the locations of cicled on the map to move around appropriately.
  </ul>

 <h2 id="level3">Preparedness Level 3: Count your Chickens </h2>
 <p>A very simple way to assure yourself and the CHC Omeka Owner that everything is OK is to regularly check the number of items, item-sets and media files.  
<p>
  If you update and double check the expected counts each time you add places, documents or folders, you can rest easy in the knowledge that your changes have been registered.  Even when you have not been knowingly addng or deleting things, repeating this count every week can provide you a timely assourance that everything is OK or provide a warning that some unexpected loss has occurred.

   <figure class="middle"> 
    <img src="./images/audit_report.jpg">
      <figcaption>Simple audit running count of assets.</figcaption>
    </figure>

 
<p>For now, our audit process consists of a spreadsheet that provides a running list of upload events.  For each event there is a number of items, item-sets (CDASH Folders), and media files (scans) that are affected.  The spreadsheet calculates cumulative counts that have been checked against the counts of actual items in Omeka.  At the time this is being written, we are involved with the initial population of CDASH, so these numbers are checked each time files are uploaded.  This simple procedure is one way of checking to make sure that the expected numbers of items and folders have been created, and that they persist. 

  <div id="giveashit" class="feature funfact">
    <h3>The Critical Importance of Giving a Shit</h3>
    <p>It should now be clear that detecting and recovering from management mistakes is a lot of trouble.  By far the easiest way to live is to ignore problems -- especially ones that probably nobody is going to notice anyway.  This would be an understandable approach for many people.  The Historical Commission's Omeka Owner should be aware of the importance of having an Omeka administrator who has the archival mindset and temperament to do the right thing on a daily basis, and will not shy away from trouble that they may discovered. 
    </div> <!-- closes funfact -->    

  <h3 id="to-do">To Do: More Integrity Checks</h3>
In addition to the simple count of items, relationships are an essential aspect of CDASH data that can become corrupt resulting in the loss of information.  For example, it is possible to change the properties of a Place Item or a Document Item in such a way that the relation between Documents and Places is lost.  If this happens, disassociated documents can become orphans which would become undiscoverable through the map interface. Similar situations can happen with folders.  Currently, this sort of data loss is difficult to discover.  In the next phase of CDASH development we hope to develop an audit tool that can catch this sort of corruption.




 


  </div> <!-- Closes #article div -->
  <div id="footer"> <!-- Content provided by cdash_includes.js--> </div> 




</div> <!-- Closes main container--> 
</div> <!-- closes grid container-->
</body>

</html>
    